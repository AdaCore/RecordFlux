-- error: dependency cycle
with Multiple_Errors;

-- error: RFLX prefix not allowed
-- error: Package identifier inconsistent with file name
package RFLX_Invalid is

   type R is range 5 .. 23 with Size => 16;
   type R_Sequence is sequence of R;

   -- error: first contains variable
   -- error: last contains variable
   type Range2 is range X + 2 .. X + 55 with Size => 24;

   -- error: range negative
   type Range3 is range 100 .. 50 with Size => 24;

   -- error: size contains variable negative
   type Range4 is range 1 .. 50 with Size => 24 + T;

   -- error: size too small
   type Range5 is range 0 .. 255 with Size => 7;

   -- error: undefined element type
   type A2 is sequence of Undef;

   -- error: Duplicate type
   type R is (R_E1, R_E2) with Size => 8;

   -- error: Redefinition of built-in type
   type Boolean is (Foo, Bar) with Size => 12;

   -- error: Conflicting literals
   type R2 is (R2_E1, R2_E2, Foo) with Size => 24;

   -- error: Size too small
   -- error: Duplicate element
   type E2 is (E2_1, E2_2, E2_2) with Size => 1;

   -- error: duplicate enumeration value
   type E3 is (E3_1 => 1, E3_2 => 2, E3_3 => 2) with Size => 8;

   -- error: conflicting literals
   type E4 is (True, False) with Size => 1;

   -- error: conflict between type and literals
   type E5 is (Foo, E4, Bar) with Size => 8;

   type M1 is
      message
         null
            then X
               with Size => 2 * 8;
         -- error: Aggregate element out of range (2 times)
         X : Opaque
            then Y
               with Size => 5 * 8
               if X = [1, 256, 20, 500];
         -- error: Aggregate element out of range (3 times)
         Y : R_Sequence
            then null if Y = [1, 10, 20, 50, 60];

         -- error: duplicate link
         Z : R then null then null;
      end message;

   type M2 is
      message
         -- error: Undefined field type
         Z : Undef_Type
            -- error: Undefined field
            then X;
      end message;

   -- error: unsupported element type size
   type E6 is range 0 .. 2 ** 4 - 1 with Size => 4;
   type A3 is sequence of E6;

   type SDU1 is
      message
         Field : Boolean
            then null
               -- error: invalid first aspect
               with First => 0;
      end message;

   type SDU2 is
      message
         Field : Boolean;
      end message;

   type PDU1 is
      message
         Length : R then Data with Size => Length;
         Data : Opaque;
      end message;
   for RFLX_Invalid::PDU1 use (Data => RFLX_Invalid::SDU2);

   -- error: duplicate refinement
   for PDU1 use (Data => SDU2);

   -- error: undefined message
   for Undef_PDU use (Data => R);

   -- error: undefined type in refinement
   for PDU1 use (Data => Undef_Type);

   -- error: invalid field
   for PDU1 use (Undef_Field => R)
   -- error: unknown field or literal X in condition
   -- error: unknown field or literal Y in condition
      if X < Y + 1;

   -- error: duplicate refinement
   type Ref1 is new PDU1;
   type Ref1 is new PDU1;

   -- error: undefined base message
   type Ref2 is new Undef_Type;

   -- error: illegal derivation non-message type
   type Ref3 is new R;

   -- error: illegal derivation of derived type
   type Ref4 is new Ref1;

   type M3 is
      message
         Length : R
            then Data
               with Size => Length
               if F1 > 1000;
         Data  : Opaque
            then F1
               -- error: invalid relation to aggregate
               if F1 <= [5, 20];
         F1 : R
            then F2
               -- error: invalid use of size attribute
               if 1'Size = 42;
         F2 : R
            then null
               -- error: invalid relation between F2 and aggregate
               if F1 = [1, 100];
      end message;

   type M4 is
      message
         F1 : R;
      end message;

   type M5 is
      message
         F2 : M4;
         -- error: name conflict
         F2_F1 : R;
      end message;

   type M6 is
      message
         Length : R
            then Data1
               with Size => Length;
         Data1  : R_Sequence
            then Data2
               with Size => Length
               -- error: aggregate element out of range, 2 times
               if Data1 = [1, 7, 1000];
         Data2  : Opaque
            then null
               -- error: aggregate element out of range
               if Data2 = [1, 1000];
      end message;

   type M5_Sequence is sequence of M5;
   type M7 is
      message
         Length : R
            then Data
               with Size => Length;
         Data : M5_Sequence
            then null
               -- error: invalid sequence element type
               if Data = [1, 7, 1000];
      end message;

   type U32 is range 0 .. 2 ** 32 - 1 with Size => 32;

   -- error: conflicting condition
   type M8 is
      message
         F1 : U32
            then null
               if F1 > 50
            then F2
               if F1 < 80;
         F2 : U32;
      end message;

   type M9 is
      message
         F1 : U32 then null;
         -- error: unreachable field
         F2 : U32;
      end message;

   type M10 is
      message
         F1 : U32
            -- error: contradicting condition
            then null if 1 = 2
            then null if F1 > 50;
      end message;

   type M11 is
      message
         null
            -- error: fixed size field with size aspect
            then F1
               with Size => 24;
         F1 : U32;
      end message;

   type M12 is
      message
         null
            then F1
               -- error: invalid first
               with First => 7;
         F1 : U32;
      end message;

   type M13 is
      message
         null
            then F1
               -- error: subsequent field referenced
               if F1 > 42;
         F1 : U32;
      end message;

   type M14 is
      message
         F1 : U32
            then F2
               -- error: negative size
               with Size => F1 - 2 ** 33;
         F2 : Opaque;
      end message;

   type M15 is
      message
         -- error: unconstrainted field without size aspect
         F1 : Opaque;
         F2 : Opaque;
      end message;

   type U8 is range 0 .. 2 ** 8 - 1 with Size => 8;
   type U16 is range 0 .. 2 ** 16 - 1 with Size => 16;
   type M16 is
      message
         F1 : U8;
         F2 : U8
            then F3
               -- error: not congruent with overlayed field
               with First => F2'First;
         F3 : U16;
         F4 : U16;
      end message;

   type M17 is
      message
         F1 : U32
            then null
               -- error: size aspect for final field
               with Size => 32;
      end message;

   type Unnecessary_Always_Valid_Enum is (UAVE1, UAVE2, UAVE3, UAVE4) with
      Size => 2,
      -- error: unnecessary Always_Valid
      Always_Valid;

   type M18 is
      message
         F1 : U32;
         F2 : U32
            then F3
               -- error: undefined variable
               if F1 = 0 and Undef_Var;
         F3 : U32;
      end message;

-- error: End identifier inconsistent with package identifier
end Inconsistent;
