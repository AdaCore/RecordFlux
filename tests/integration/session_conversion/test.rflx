with Universal;

package Test is

   generic
      Channel : Channel with Readable, Writable; -- §S-P-C-RW
   session Session with
      Initial => Start,
      Final => Terminated
   is
      Message : Universal::Message; -- §S-D-V-T-M, §S-D-V-E-N
   begin
      state Start is
      begin
         Channel'Read (Message); -- §S-S-A-RD-V
      transition
         goto Reply
            if Message'Valid -- §S-S-T-VAT, §S-E-AT-V-V
               and Message.Message_Type = Universal::MT_Data -- §S-S-T-S, §S-E-S-V
         goto Terminated -- §S-S-T-N
      end Start;

      state Reply is
         Inner_Message : Universal::Option; -- §S-S-D-V-T-M, §S-S-D-V-E-N
      begin
         Inner_Message := Universal::Option (Message.Data); -- §S-S-A-A-CV, §S-E-CV-V, §S-E-S-V
         Channel'Write (Inner_Message); -- §S-S-A-WR-V
      transition
         goto Terminated -- §S-S-T-N
      exception
         goto Terminated -- §S-S-E
      end Reply;

      state Terminated is null state; -- §S-S-N
   end Session;

end Test;
