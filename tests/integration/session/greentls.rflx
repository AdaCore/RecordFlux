with TLS_Alert;

package GreenTLS is

   type Content is
      message
         null
            then Data
               with Size => Message'Size;
         Data : Opaque;
      end message;

   for Content use (Data => TLS_Alert::Alert);

   type Control_Message_Type is (Key_Update_Client, Key_Update_Server, Heartbeat, Alert) with Size => 8;
   type Control_Message_Length is range 0 .. 2**16 - 1 with Size => 16;

   type Control_Message is
      message
         Tag : Control_Message_Type;
         Length : Control_Message_Length
            then Data
               with Size => Length * 8;
         Data : Opaque;
      end message;

   type Key_Length is range 8 .. 64 with Size => 8;

   type Key_Update_Message is
      message
         Key_Length : Key_Length
            then Key
               with Size => Key_Length * 8;
         Key : Opaque;
         IV_Length : Key_Length
            then IV
               with Size => IV_Length * 8;
         IV : Opaque;
      end message;

   for Control_Message use (Data => Key_Update_Message)
      if Tag = Key_Update_Client or Tag = Key_Update_Server;

   type Heartbeat_Mode is (Heartbeat_Enabled, Heartbeat_Disabled) with Size => 8;

   type Heartbeat_Control_Message is
      message
         Local : Heartbeat_Mode;
         Remote : Heartbeat_Mode;
      end message;

   for Control_Message use (Data => Heartbeat_Control_Message)
      if Tag = Heartbeat;

   type Alert_Message is
      message
         Description : TLS_Alert::Alert_Description;
      end message;

   for Control_Message use (Data => Alert_Message)
      if Tag = Alert;

   type Application_Control_Message_Type is
      (Application_Shutdown,
       Application_Alert,
       Application_Protocol,
       Application_No_Early_Data)
   with Size => 8;

   type Application_Control_Message_Length is range 0 .. 2**8 - 1 with Size => 8;

   type Application_Control_Message is
      message
         Tag : Application_Control_Message_Type;
         Length : Application_Control_Message_Length
            then Data
               with Size => Length * 8;
         Data : Opaque;
      end message;

   type Application_Shutdown_Message is null message;

   for Application_Control_Message use (Data => Application_Shutdown_Message)
      if Tag = Application_Shutdown;

   for Application_Control_Message use (Data => Alert_Message)
      if Tag = Application_Alert;

   type Application_No_Early_Data_Message is null message;

   for Application_Control_Message use (Data => Application_No_Early_Data_Message)
      if Tag = Application_No_Early_Data;

   type Heartbeat_Data_Length is range 0 .. 2**14 with Size => 16;

   type Heartbeat_Data_Message is
      message
         Length : Heartbeat_Data_Length
            then Data
               with Size => Length * 8;
         Data : Opaque;
      end message;

   type Sequence_Number is mod 2**16;

end GreenTLS;
