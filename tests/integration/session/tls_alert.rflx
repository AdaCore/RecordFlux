package TLS_Alert is

   type Alert_Level is (WARNING => 1, FATAL => 2) with Size => 8;

   type Alert_Description is (
      CLOSE_NOTIFY => 0,
      UNEXPECTED_MESSAGE => 10,
      BAD_RECORD_MAC => 20,
      RECORD_OVERFLOW => 22,
      HANDSHAKE_FAILURE => 40,
      BAD_CERTIFICATE => 42,
      UNSUPPORTED_CERTIFICATE => 43,
      CERTIFICATE_REVOKED => 44,
      CERTIFICATE_EXPIRED => 45,
      CERTIFICATE_UNKNOWN => 46,
      ILLEGAL_PARAMETER => 47,
      UNKNOWN_CA => 48,
      ACCESS_DENIED => 49,
      DECODE_ERROR => 50,
      DECRYPT_ERROR => 51,
      PROTOCOL_VERSION => 70,
      INSUFFICIENT_SECURITY => 71,
      INTERNAL_ERROR => 80,
      INAPPROPRIATE_FALLBACK => 86,
      USER_CANCELED => 90,
      MISSING_EXTENSION => 109,
      UNSUPPORTED_EXTENSION => 110,
      UNRECOGNIZED_NAME => 112,
      BAD_CERTIFICATE_STATUS_RESPONSE => 113,
      UNKNOWN_PSK_IDENTITY => 115,
      CERTIFICATE_REQUIRED => 116,
      NO_APPLICATION_PROTOCOL => 120
   ) with Size => 8;

   type Alert is
      message
         Level : Alert_Level;
         Description : Alert_Description
            then null
               if (Level = WARNING and (Description = CLOSE_NOTIFY or Description = USER_CANCELED)) or (Level = FATAL and Description /= CLOSE_NOTIFY and Description /= USER_CANCELED);
      end message;

end TLS_Alert;
