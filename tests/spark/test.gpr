with "aunit";
with "../../defaults";

project Test is

   type Build_Type is ("default", "optimized", "unchecked");
   Build_Type : Build_Type := external ("type", "default");
   Test := external ("test", "");

   Spec_Dir := "../../examples/specs";
   Test_Dir := ".";
   Generated_Dir := "generated";

   for Languages use ("Ada", "RecordFlux");

   package Naming is
      for Spec_Suffix ("RecordFlux") use ".rflx";
   end Naming;

   package RecordFlux is
      for Output_Dir use Generated_Dir;
   end RecordFlux;

   case Build_Type is
      when "default" | "optimized" =>
         for Source_Dirs use (Test_Dir, Generated_Dir, Spec_Dir);
         case Test is
            when "" =>
               for Main use ("test.adb");
            when others =>
               for Main use ("test_" & Test & ".adb");
         end case;
      when "unchecked" =>
         for Source_Dirs use (Generated_Dir, Spec_Dir);
   end case;

   for Object_Dir use "../../build/test";
   for Create_Missing_Dirs use "True";

   package Binder is
      for Default_Switches ("Ada") use Defaults.Binder_Switches;
   end Binder;

   package Builder is
      case Build_Type is
         when "default" | "unchecked" =>
            for Default_Switches ("Ada") use Defaults.Builder_Switches;
         when "optimized" =>
            for Default_Switches ("Ada") use Defaults.Builder_Switches & ("-O3");
      end case;
   end Builder;

   package Compiler is
      for Driver ("RecordFlux") use "";
      case Build_Type is
         when "default" | "optimized" =>
            for Default_Switches ("Ada") use Defaults.Compiler_Switches;
         when "unchecked" =>
            null;
      end case;
   end Compiler;

   package Prove is
      for Proof_Switches ("Ada") use
            (
               "--prover=z3,cvc4,altergo",
               "--steps=0",
               "--timeout=90",
               "--checks-as-errors",
               "--warnings=error",
               --  ISSUE: Componolit/RecordFlux#670
               --  "--proof-warnings",
               "--no-axiom-guard",
               "--counterexamples=off",
               "-j0"
            );
   end Prove;

end Test;
