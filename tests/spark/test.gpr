with "aunit";
with "../../defaults";

project Test is

   type Build_Mode is ("strict", "asserts_enabled", "optimized", "runtime_compatible");
   Mode : Build_Mode := external ("mode", "asserts_enabled");
   Test := external ("test", "");

   Spec_Dir := "../../examples/specs";
   Test_Dir := ".";
   Generated_Dir := "generated";

   for Languages use ("Ada", "RecordFlux");

   package Naming is
      for Spec_Suffix ("RecordFlux") use ".rflx";
   end Naming;

   package RecordFlux is
      for Output_Dir use Generated_Dir;
   end RecordFlux;

   case Mode is
      when "asserts_enabled" | "optimized" =>
         for Source_Dirs use (Test_Dir, Generated_Dir, Spec_Dir);
         case Test is
            when "" =>
               for Main use ("test.adb");
            when others =>
               for Main use ("test_" & Test & ".adb");
         end case;
      when "strict" | "runtime_compatible" =>
         for Source_Dirs use (Generated_Dir, Spec_Dir);
   end case;

   for Object_Dir use "../../build/test";
   for Create_Missing_Dirs use "True";

   package Binder is
      for Default_Switches ("Ada") use Defaults.Binder_Switches;
   end Binder;

   package Builder is
      case Mode is
         when "strict" | "asserts_enabled" | "runtime_compatible" =>
            for Default_Switches ("Ada") use Defaults.Builder_Switches;
         when "optimized" =>
            for Default_Switches ("Ada") use Defaults.Builder_Switches & ("-O3");
      end case;
      case Mode is
         when "strict" | "runtime_compatible" =>
            for Global_Configuration_Pragmas use "../../" & Defaults.Global_Configuration_Pragmas;
         when "asserts_enabled" | "optimized" =>
            null;
      end case;
   end Builder;

   package Compiler is
      for Driver ("RecordFlux") use "";
      case Mode is
         when "strict" | "asserts_enabled" | "optimized" =>
            for Default_Switches ("Ada") use Defaults.Compiler_Switches;
         when "runtime_compatible" =>
            null;
      end case;
   end Compiler;

   package Prove is
      for Proof_Switches ("Ada") use Defaults.Proof_Switches;
      for Proof_Switches ("rflx-custom_types_tests.adb") use ("--prover=Z3,altergo,CVC4", "--steps=900000", "--timeout=210");
   end Prove;

end Test;
