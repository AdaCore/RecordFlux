with Universal;

package Test is

   generic
      Channel : Channel with Writable; -- §S-P-C-W
   machine S is
      Message : Universal::Message; -- §S-D-V-T-M, §S-D-V-E-N
   begin
      state Start is
         Options : Universal::Options; -- §S-S-D-V-T-MS, §S-S-D-V-E-N
      begin
         -- §S-S-A-AP-MA, §S-E-A-T-SC, §S-E-A-E-L
         Options'Append (Universal::Option'(Option_Type => Universal::OT_Data, Length => 1, Data => [1]));
         -- §S-S-A-AP-MA, §S-E-A-T-SC, §S-E-A-E-L
         Options'Append (Universal::Option'(Option_Type => Universal::OT_Data, Length => 2, Data => [2, 3]));
         -- §S-S-A-AP-MA
         Options'Append (Universal::Option'(Option_Type => Universal::OT_Null));
         -- §S-S-A-A-MA
         Message := Universal::Message'(Message_Type => Universal::MT_Unconstrained_Options, Options => Options);
      transition
         goto Reply -- §S-S-T-N
      exception
         goto null -- §S-S-E
      end Start;

      state Reply is
      begin
         Channel'Write (Message); -- §S-S-A-WR-V
      transition
         goto null -- §S-S-T-N
      end Reply;
   end S;

end Test;
