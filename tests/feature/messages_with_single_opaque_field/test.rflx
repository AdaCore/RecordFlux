package Test is

   type Message is
      message
         Data : Opaque;
      end message;

   generic
      Channel : Channel with Readable, Writable;
   machine S is
      M_R : Message;
      M_S : Message;
   begin
      state Start is
      begin
         Channel'Read (M_R);
      transition
         goto Process
      end Start;

      state Process is
      begin
         M_S := Message'(Data => M_R.Data);
      transition
         goto Reply
      exception
         goto null
      end Process;

      state Reply is
      begin
         Channel'Write (M_S);
      transition
         goto null
      end Reply;
   end S;

end Test;
