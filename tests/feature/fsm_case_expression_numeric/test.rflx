with Universal;

package Test is

   type Tiny_Int is range 1 .. 4 with Size => 8;

   type Message is
      message
         Value : Tiny_Int;
      end message;

   type Int is range 0 .. 2 ** 16 - 1 with Size => 16;

   generic
      Channel : Channel with Readable, Writable;
   machine S is
      Message : Message;
   begin
      state Start is
      begin
         Channel'Read (Message);
      transition
         goto Prepare
            if Message'Valid
         goto null
      exception
         goto null
      end Start;

      state Prepare is
         Value : Tiny_Int;
         T : Int;
      begin
         T := 1;
         Value := (case Message.Value is
                      when 1 | 2 => 4,
                      when 3     => T,
                      when 4     => 2);

         Message := Message'(Value => Value);
      transition
         goto Reply
      exception
         goto null
      end Prepare;

      state Reply is
      begin
         Channel'Write (Message);
      transition
         goto null
      end Reply;
   end S;

end Test;
