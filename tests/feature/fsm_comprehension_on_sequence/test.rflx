with Universal;

package Test is

   generic
      Channel : Channel with Writable; -- §S-P-C-W
   machine S is
      Options : Universal::Options; -- §S-D-V-T-MS, §S-D-V-E-N
      Message_1 : Universal::Message; -- §S-S-D-V-T-M, §S-S-D-V-E-N
      Message_2 : Universal::Message; -- §S-S-D-V-T-M, §S-S-D-V-E-N
   begin
      state Start is
      begin
         -- §S-S-A-AP-MA, §S-E-A-T-SC, §S-E-A-E-L
         Options'Append (Universal::Option'(Option_Type => Universal::OT_Data, Length => 1, Data => [2]));
         -- §S-S-A-AP-MA
         Options'Append (Universal::Option'(Option_Type => Universal::OT_Null));
         -- §S-S-A-AP-MA, §S-E-A-T-SC, §S-E-A-E-L
         Options'Append (Universal::Option'(Option_Type => Universal::OT_Data, Length => 2, Data => [2, 3]));
      transition
         goto Process -- §S-S-T-N
      exception
         goto null -- §S-S-E
      end Start;

      state Process is
         Option_Types : Universal::Option_Types; -- §S-S-D-V-T-SS, §S-S-D-V-E-N
         Message_Options : Universal::Options; -- §S-S-D-V-T-MS, §S-S-D-V-E-N
      begin
         -- §S-S-A-A-LC, §S-E-LC-V, §S-E-LC-SMS, §S-E-LC-TSS, §S-E-LC-CS, §S-E-LC-A, §S-E-S-V
         Option_Types := [for E in Options if E.Option_Type = Universal::OT_Data => E.Option_Type];
         -- Test that target sequence is reset by assignment
         Option_Types := [for E in Options if E.Option_Type = Universal::OT_Data => E.Option_Type];
         -- §S-S-A-A-MA
         Message_1 := Universal::Message'(Message_Type => Universal::MT_Option_Types,
                                          Length => Option_Types'Size / 8,
                                          Option_Types => Option_Types);
         -- §S-S-A-A-LC, §S-E-LC-V, §S-E-LC-SMS, §S-E-LC-TMS, §S-E-LC-CS, §S-E-LC-A, §S-E-S-V
         Message_Options := [for E in Options if E.Option_Type = Universal::OT_Data => E];
         -- §S-S-A-A-MA
         Message_2 := Universal::Message'(Message_Type => Universal::MT_Options,
                                          Length => Message_Options'Size / 8,
                                          Options => Message_Options);
         -- §S-S-A-RS-V
         Message_Options'Reset;
      transition
         goto Send_1 -- §S-S-T-N
      exception
         goto null -- §S-S-E
      end Process;

      state Send_1 is
      begin
         -- §S-S-A-WR-V
         Channel'Write (Message_1);
      transition
         goto Send_2 -- §S-S-T-N
      end Send_1;

      state Send_2 is
      begin
         -- §S-S-A-WR-V
         Channel'Write (Message_2);
      transition
         goto null -- §S-S-T-N
      end Send_2;
   end S;

end Test;
