with TLS_Alert;
with TLS_Handshake;

package TLS_Record is

   type Content_Type is (INVALID => 0, CHANGE_CIPHER_SPEC => 20, ALERT => 21, HANDSHAKE => 22, APPLICATION_DATA => 23, HEARTBEAT => 24) with Size => 8;
   type Protocol_Version is (TLS_1_0 => 16#0301#, TLS_1_1 => 16#0302#, TLS_1_2 => 16#0303#, TLS_1_3 => 16#0304#) with Size => 16;
   type Length is range 0 .. 2**14 + 256 with Size => 16;

   type TLS_Record is
      message
         Tag : Content_Type;
         Legacy_Record_Version : Protocol_Version;
         Length : Length
            then Fragment
               with Size => Length * 8
               if Tag /= APPLICATION_DATA and Length <= 2**14
            then Encrypted_Record
               with Size => Length * 8
               if Tag = APPLICATION_DATA and Legacy_Record_Version = TLS_1_2;
         Fragment : Opaque
            then null;
         Encrypted_Record : Opaque;
      end message;

   for TLS_Record use (Fragment => TLS_Alert::Alert)
       if Tag = ALERT;

   for TLS_Record use (Fragment => TLS_Handshake::Handshake)
       if Tag = HANDSHAKE;

   type TLS_Inner_Plaintext is
      message
         Tag : Content_Type
            then Content
               with Size => Message'Size - 16
               if Message'Size > 16;
         Content : Opaque;
      end message;

end TLS_Record;
